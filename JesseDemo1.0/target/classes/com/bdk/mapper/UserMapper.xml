<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdk.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.bdk.mapper.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="ID" jdbcType="VARCHAR" property="id" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="TELL" jdbcType="VARCHAR" property="tell" />
    <result column="MAIL" jdbcType="VARCHAR" property="mail" />
    <result column="COMPANY" jdbcType="VARCHAR" property="company" />
    <result column="USER_TYPE" jdbcType="VARCHAR" property="userType" />
    <result column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <result column="MARK" jdbcType="VARCHAR" property="mark" />
  </resultMap>
  <insert id="insert" parameterType="com.bdk.mapper.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into p_user (ID, NAME, PASSWORD, 
      TELL, MAIL, COMPANY, 
      USER_TYPE, ROLE_ID, MARK
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{tell,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{userType,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{mark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bdk.mapper.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into p_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="tell != null">
        TELL,
      </if>
      <if test="mail != null">
        MAIL,
      </if>
      <if test="company != null">
        COMPANY,
      </if>
      <if test="userType != null">
        USER_TYPE,
      </if>
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="mark != null">
        MARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="tell != null">
        #{tell,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        #{mark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
    <insert id="save" parameterType="com.bdk.mapper.User">  
        insert into userinfo(name,password,tell,mail,company) values(#{name},#{password},#{tell},#{mail},#{company})  
    </insert>  
    <update id="update" parameterType="com.bdk.mapper.User">    
        update userinfo set name=#{name},password=#{password},tell = #{tell},mail=#{mail},company=#{company} where id=#{id}    
    </update>   
    <delete id="delete" parameterType="int">    
        delete from userinfo where id=#{id}    
    </delete>    
     <!-- mybsits_config中配置的alias类别名,也可直接配置resultType为类路径 -->      
    <select id="findById" parameterType="int" resultType="com.bdk.mapper.User">    
        select id,name, password,tell,mail, company from userinfo where id=#{id}    
    </select>    
    <select id="findAll" resultType="com.bdk.mapper.User">    
         select id,name, password,tell,mail,company from userinfo 
    </select>  
    
    <select id="login" parameterType="java.lang.String" resultType="com.bdk.mapper.User">    
        select id,name,password,tell,mail, company from userinfo where name=#{name} and password = #{password}    
    </select>    
    
    <select id="queryUserList" resultType="com.bdk.mapper.User">    
         select id,name, password,tell,mail,company from userinfo 
         <if test="userName!=null and userName!=''">
         	where name like CONCAT('%',#{userName},'%' )
         </if>
         limit #{pageStart} , #{pageSize}
    </select>  
    
    <select id="queryUserName" resultType="int">    
         select count(name) from userinfo 
         <if test="userName!=null and userName!=''">
         	where name like  #{userName}
         </if>
    </select> 
    
    <select id="queryTotal" resultType="int">    
         select count(1) from userinfo 
         <if test="userName!=null and userName!=''">
         	where name like CONCAT('%',#{userName},'%' )
         </if>
    </select>
</mapper>